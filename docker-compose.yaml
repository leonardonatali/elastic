version: '3.3'
services:

  db:
    image: postgres
    container_name: postgres
    tty: true
    environment:
      - POSTGRES_DB=commerce_admin
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=root
    volumes:
      - .docker/pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - observability
  app:
    build: app
    container_name: app_python
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./app:/code
    ports:
      - "8000:8000"
    depends_on:
      - db
    networks:
      - observability

  nginx:
    build: nginx
    container_name: nginx
    ports:
      - "8280:80"
    networks:
      - observability

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.1.0-amd64
    container_name: elasticsearch
    env_file:
      - elastic.env
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    networks:
      - observability

  kibana:
    image: docker.elastic.co/kibana/kibana:8.1.0-amd64
    container_name: kibana
    depends_on:
      - elasticsearch
    env_file:
      - kibana.env
    ports:
      - 5601:5601
    networks:
      - observability

  metricbeat:
    image: docker.elastic.co/beats/metricbeat:8.1.0-amd64
    container_name: metricbeat
    user: root
    environment:
      - logging.level=warn
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./beats/metric/metricbeat.yml:/usr/share/metricbeat/metricbeat.yml
    restart: on-failure
    networks:
      - observability

  heartbeat:
    image: docker.elastic.co/beats/heartbeat:8.1.0-amd64
    container_name: heartbeat
    user: root
    environment:
      - setup.kibana.host=kibana:5601
    volumes:
      - ./beats/heartbeat/heartbeat.yml:/usr/share/heartbeat/heartbeat.yml
    restart: on-failure
    networks:
      - observability

  apm:
    image: docker.elastic.co/apm/apm-server:7.15.0-amd64
    container_name: apm
    volumes:
      - ./apm/apm-server.yml:/usr/share/apm-server/apm-server.yml
    restart: on-failure
    ports:
      - 8200:8200
    networks:
      - observability

volumes:
  elasticsearch_data:

networks:
  observability:
    driver: bridge
